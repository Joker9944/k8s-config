name: docker-publish

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      context:
        required: true
        type: string

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ inputs.image_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      # Install the cosign tool
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 # v3.6.0
        with:
          # TODO renovate: https://github.com/sigstore/cosign/releases
          cosign-release: 'v2.4.0'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.6.1

      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker label metadata
        id: meta_label
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Extract Docker upstream tags metadata
        id: meta_tags
        env:
          CONTEXT: ${{ inputs.context }}
          IMAGE_NAME: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        run: |
          UPSTREAM_IMAGE_VERSION=$(head -n 1 "$CONTEXT/Dockerfile" | sed -r 's/^FROM .+:(.+)@.+$/\1/')
          IFS='.' read -ra UPSTREAM_IMAGE_VERSION_ARRAY <<< "$UPSTREAM_IMAGE_VERSION"
          {
            echo 'tags<<EOF'
            echo "$IMAGE_NAME:latest"
            echo "$IMAGE_NAME:$UPSTREAM_IMAGE_VERSION"
            echo "$IMAGE_NAME:${UPSTREAM_IMAGE_VERSION_ARRAY[0]}.${UPSTREAM_IMAGE_VERSION_ARRAY[1]}"
            echo "$IMAGE_NAME:${UPSTREAM_IMAGE_VERSION_ARRAY[0]}"
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"

      # Build and push Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # 6.7.0
        with:
          platforms: linux/amd64,linux/arm64
          context: ${{ inputs.context }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_tags.outputs.tags }}
          labels: ${{ steps.meta_label.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker image digest.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta_tags.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
