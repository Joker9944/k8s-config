---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prowlarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.4.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s

  values:

    global:
      alwaysAppendIdentifierToResourceName: true
      labels:
        app.kubernetes.io/part-of: servarr

    defaultPodOptions:
      labels:
        app.kubernetes.io/part-of: servarr
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/part-of: servarr

    controllers:

      prowlarr:

        pod:
          securityContext:
            runAsUser: &PUID 568
            runAsGroup: &GUID 568
            runAsNonRoot: true
            fsGroup: *GUID
            seccompProfile:
              type: RuntimeDefault

        containers:

          prowlarr:
            image:
              repository: ghcr.io/home-operations/prowlarr
              tag: 2.1.3.5208@sha256:236a73dad45baeedd1eba40a457de63a644695728a2ce28f0d254b1fe9a05822
            env:
              # https://techcommunity.microsoft.com/t5/microsoft-developer-community/hardening-an-asp-net-container-running-on-kubernetes/ba-p/2542224
              COMPlus_EnableDiagnostics: 0
              PROWLARR__APP__INSTANCENAME: Prowlarr
              PROWLARR__AUTH__APIKEY:
                valueFrom:
                  secretKeyRef:
                    name: prowlarr-api-key
                    key: key
              PROWLARR__AUTH__METHOD: External
              PROWLARR__AUTH__REQUIRED: Enabled
              PROWLARR__SERVER__PORT: &port_http 9696
              PROWLARR__LOG__LEVEL: info
              PROWLARR__POSTGRES__HOST: servarr-cnpg-rw
              PROWLARR__POSTGRES__USER:
                valueFrom:
                  secretKeyRef:
                    name: prowlarr-cnpg-user
                    key: username
              PROWLARR__POSTGRES__PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: prowlarr-cnpg-user
                    key: password
              PROWLARR__POSTGRES__MAINDB: prowlarr-main
              PROWLARR__POSTGRES__LOGDB: prowlarr-log
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    port: *port_http
                    path: /ping
                  failureThreshold: 6
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    port: *port_http
                    path: /ping
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    port: *port_http
                    path: /ping
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 30m
                memory: 400Mi
              limits:
                memory: 700Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

        initContainers:

          postgresql:
            image:
              repository: ghcr.io/joker9944/postgresql-client
              tag: 3.22.2@sha256:013054591d2ad2c56cbecaba2d5f699ec7cb6383d483aa3b04760ba9db26af4c
            env:
              PGHOST: servarr-cnpg-r
              PGUSER:
                valueFrom:
                  secretKeyRef:
                    name: prowlarr-cnpg-user
                    key: username
              PGPASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: prowlarr-cnpg-user
                    key: password
              MAIN_DATABASE: prowlarr-main
              LOG_DATABASE: prowlarr-log
            command: [/bin/sh, -c]
            args:
              - |
                echo "Testing connection for DB $MAIN_DATABASE and $LOG_DATABASE on $PGHOST"
                until
                  pg_isready --dbname="$MAIN_DATABASE"
                  pg_isready --dbname="$LOG_DATABASE"
                  do sleep 5
                done
                echo "DB $MAIN_DATABASE and $LOG_DATABASE available on $PGHOST"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

    service:

      prowlarr:
        controller: prowlarr
        ports:
          http:
            port: *port_http

    ingress:

      prowlarr:
        annotations:
          traefik.ingress.kubernetes.io/router.tls: "true"
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: servarr-chain-country-whitelist@kubernetescrd,servarr-prowlarr-oidc@kubernetescrd
        hosts:
          - host: &host prowlarr.vonarx.online
            paths:
              - path: /
                service:
                  identifier: prowlarr
                  port: http
        tls:
          - hosts:
              - *host
            secretName: wildcard-vonarx-online-cert

    persistence:

      config:
        type: emptyDir

      tmp:
        type: emptyDir

    rawResources:

      main:
        apiVersion: postgresql.cnpg.io/v1
        kind: Database
        spec:
          spec:
            name: prowlarr-main
            owner: prowlarr
            cluster:
              name: servarr-cnpg
            databaseReclaimPolicy: retain

      log:
        apiVersion: postgresql.cnpg.io/v1
        kind: Database
        spec:
          spec:
            name: prowlarr-log
            owner: prowlarr
            cluster:
              name: servarr-cnpg
            databaseReclaimPolicy: retain

      oidc:
        apiVersion: traefik.io/v1alpha1
        kind: Middleware
        spec:
          spec:
            plugin:
              oidc:
                providerURL: https://idm.vonarx.online/oauth2/openid/prowlarr
                clientID: prowlarr
                clientSecret: urn:k8s:secret:prowlarr-oidc:CLIENT_SECRET
                sessionEncryptionKey: urn:k8s:secret:prowlarr-oidc:SESSION_ENCRYPTION_KEY
                callbackURL: /oauth2/callback
                enablePKCE: true
                scopes:
                  - groups
                allowedRolesAndGroups:
                  - servarr_admins@idm.vonarx.online
                allowedUserDomains:
                  - vonarx.online
                excludedURLs:
                  - /favicon.ico
