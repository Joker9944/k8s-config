---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: komga
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.3.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s

  values:

    global:
      alwaysAppendIdentifierToResourceName: true

    controllers:
      komga:
        type: statefulset

        pod:
          securityContext:
            runAsUser: &PUID 6013
            runAsGroup: &GUID 6000
            runAsNonRoot: true
            fsGroup: *GUID
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [568]
            seccompProfile:
              type: RuntimeDefault

          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 10
                  preference:
                    matchExpressions:
                      - key: vonarx.online/nfs-host
                        operator: Exists

        containers:

          komga:
            image:
              repository: gotson/komga
              tag: 1.23.5@sha256:85f0be8920742341217f2b2bdafef64da1f6062ae472dcf74426a9fa549c8a05
            env:
              UMASK: 0002
              SERVER_PORT: &port_http 25600
              KOMGA_CORS_ALLOWEDORIGINS: https://komga.vonarx.online
              KOMGA_OAUTH2ACCOUNTCREATION: 'true'
              KOMGA_OIDCEMAILVERIFICATION: 'false'
              SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KANIDM_CLIENTSECRET:
                valueFrom:
                  secretKeyRef:
                    name: komga-oidc
                    key: client-secret
              LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: INFO
            # TODO Probes
            # TODO Resources
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

    service:

      komga:
        controller: komga
        ports:
          http:
            port: *port_http

    ingress:

      komga:
        annotations:
          traefik.ingress.kubernetes.io/router.tls: "true"
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: komga-chain-country-whitelist@kubernetescrd
        hosts:
          - host: &host komga.vonarx.online
            paths:
              - path: /
                service:
                  identifier: komga
                  port: http
        tls:
          - hosts:
              - *host
            secretName: wildcard-vonarx-online-cert

    persistence:

      config:
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        retain: true
        size: &pvc_config_size 1Gi
        #dataSourceRef:
        #  apiGroup: volsync.backube
        #  kind: ReplicationDestination
        #  name: komga-dest-config

      config-overlay:
        type: configMap
        name: komga-config-overlay
        globalMounts:
          - path: /config/application.yml
            subPath: application.yml

      data:
        type: nfs
        server: 192.168.0.10
        path: /mnt/chronos/media-data

    rawResources:

      dest-config:
        enabled: false
        apiVersion: volsync.backube/v1alpha1
        kind: ReplicationDestination
        spec:
          spec:
            trigger:
              manual: restore-once
            restic:
              repository: komga-restic-config
              accessModes: [ ReadWriteOnce ]
              capacity: *pvc_config_size
              copyMethod: Snapshot
              moverSecurityContext:
                runAsUser: *PUID
                fsGroup: *GUID
                runAsGroup: *GUID
              storageClassName: longhorn
              volumeSnapshotClassName: longhorn

      source-config:
        enabled: true
        apiVersion: volsync.backube/v1alpha1
        kind: ReplicationSource
        spec:
          spec:
            sourcePVC: komga-config
            trigger:
              schedule: '@daily'
            restic:
              repository: komga-restic-config
              pruneIntervalDays: 7
              retain:
                daily: 7
                weekly: 4
              copyMethod: Clone
              storageClassName: longhorn-local-lax
              cacheStorageClassName: longhorn
              moverSecurityContext:
                runAsUser: *PUID
                fsGroup: *GUID
                runAsGroup: *GUID
