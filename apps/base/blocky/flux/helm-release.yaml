---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: blocky
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.3.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s

  values:

    global:
      alwaysAppendIdentifierToResourceName: true

    defaultPodOptions:
      securityContext:
        runAsUser: &PUID 568
        runAsGroup: &GUID 568
        runAsNonRoot: true
        fsGroup: *GUID
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault

    controllers:

      blocky:
        type: deployment
        replicas: 2
        strategy: RollingUpdate

        containers:

          blocky:
            image:
              repository: ghcr.io/0xerr0r/blocky
              tag: v0.26@sha256:b259ada3f943e73283f1fc5e84ac39a791afec7de86515d1aeccc03d2c39e595
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  exec:
                    command: [/app/blocky, healthcheck]
                  timeoutSeconds: 3
                  failureThreshold: 6
              readiness:
                enabled: true
                custom: true
                spec:
                  exec:
                    command: [/app/blocky, healthcheck]
                  timeoutSeconds: 3
              startup:
                enabled: true
                custom: true
                spec:
                  exec:
                    command: [/app/blocky, healthcheck]
                  timeoutSeconds: 3
                  # High threshold since initial download of all blocklists can take quite some time.
                  # Estimate = 120 * 5s = 600s = 10m
                  failureThreshold: 120
                  periodSeconds: 5
            resources:
              requests:
                cpu: 30m
                memory: 100Mi
              limits:
                memory: 500Mi
            args: ['--config', '/config/']
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                add:
                  - NET_BIND_SERVICE
                drop:
                  - ALL

        initContainers:

          jinja:
            image:
              repository: ghcr.io/joker9944/jinja-cli
              tag: 3.13.7@sha256:39cd8f75f23160a5c3b192034d12457939ba7a2fbcac9be66ee90c650fa0f3e5
            env:
              PGURI:
                valueFrom:
                  secretKeyRef:
                    name: blocky-cnpg-app
                    key: uri
              REDIS_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: blocky-redis
                    key: redis-password
              KUBERNETES_NAMESPACE:
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
            command: [/bin/sh, -c]
            args: [jinja2 /templates/config.yml > /config/config.yml]
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

          postgresql:
            image:
              repository: ghcr.io/joker9944/postgresql-client
              tag: 3.22.1@sha256:2abc863c18410f993895afdc138cd9e19e36b5ff66fe1ce8eb95b93997fc2a83
            env:
              PGHOST:
                valueFrom:
                  secretKeyRef:
                    name: blocky-cnpg-app
                    key: host
              PGUSER:
                valueFrom:
                  secretKeyRef:
                    name: blocky-cnpg-app
                    key: user
              PGPASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: blocky-cnpg-app
                    key: password
              PGDATABASE:
                valueFrom:
                  secretKeyRef:
                    name: blocky-cnpg-app
                    key: dbname
            command: [/bin/sh, -c]
            args:
              - |
                echo "Testing connection for DB $PGDATABASE on $PGHOST"
                until
                  pg_isready
                  do sleep 5
                done
                echo "DB $PGDATABASE available on $PGHOST"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

    service:
      dns:
        controller: blocky
        type: LoadBalancer
        annotations:
          metallb.universe.tf/loadBalancerIPs: 192.168.0.129
        ports:
          dns-tcp:
            port: &dns_port 53
            protocol: TCP
          dns-udp:
            port: *dns_port
            protocol: UDP
      dot: # TODO Implement DoT with IngressRouteTCP, issue with conditional mapping when accessing from WAN
        controller: blocky
        ports:
          dot:
            port: 853
            protocol: TCP
      metrics:
        controller: blocky
        ports:
          http:
            port: 4000

    persistence:
      config:
        type: emptyDir
      templates:
        type: configMap
        name: blocky-config-templates
        advancedMounts:
          blocky:
            jinja:
              - path: /templates

    rawResources:
      cnpg:
        apiVersion: postgresql.cnpg.io/v1
        kind: Cluster
        spec:
          spec:
            description: PostgreSQL Cluster for blocky
            instances: 3
            storage:
              size: 1Gi
              storageClass: longhorn-local-strict
            walStorage:
              size: 1Gi
              storageClass: longhorn-local-strict
            bootstrap:
              initdb:
                database: query-log
                owner: blocky
            affinity:
              enablePodAntiAffinity: true
              podAntiAffinityType: required

---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: blocky-redis
spec:
  interval: 30m
  chart:
    spec:
      chart: redis
      version: 20.13.4
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bitnami

  values:

    architecture: standalone
    master:
      persistence:
        enabled: false
