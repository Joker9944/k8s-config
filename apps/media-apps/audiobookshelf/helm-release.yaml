---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: audiobookshelf
  namespace: ${main_namespace}
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  valuesFrom:
    - kind: Secret
      name: audiobookshelf-secret-values

  values:

    controllers:
      audiobookshelf:
        type: statefulset

        pod:
          securityContext:
            runAsUser: &PUID 6011
            runAsGroup: &GUID 6000
            runAsNonRoot: true
            fsGroup: *GUID
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [568]
            seccompProfile:
              type: RuntimeDefault

        containers:
          audiobookshelf:
            image:
              repository: advplyr/audiobookshelf
              tag: 2.13.0@sha256:6cff5defbf7f319d14bedd07a630cae46e9ee28b2b2b4b1901fa61b840de0cb7
            env:
              UMASK: 0002
              PORT: &port_http 8080
              CONFIG_PATH: &path_config /config
              METADATA_PATH: &path_metadata /metadata
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthcheck
                    port: *port_http
                  failureThreshold: 6
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port_http
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthcheck
                    port: *port_http
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 30m
                memory: 200Mi
              limits:
                memory: 500Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

    service:
      audiobookshelf:
        controller: audiobookshelf
        ports:
          http:
            port: *port_http

    ingress:
      audiobookshelf:
        annotations:
          traefik.ingress.kubernetes.io/router.tls: "true"
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: ingress-system-chain-basic@kubernetescrd,ingress-system-country-whitelist@kubernetescrd
        hosts:
          - host: &host audiobookshelf.vonarx.online
            paths:
              - path: /
                service:
                  identifier: audiobookshelf
                  port: http
        tls:
          - hosts:
              - *host
            secretName: wildcard-vonarx-online

    persistence:
      config:
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        retain: true
        size: &pvc_config_size 1Gi
        globalMounts:
          - path: *path_config
        dataSourceRef:
          apiGroup: volsync.backube
          kind: ReplicationDestination
          name: audiobookshelf-dest-config
      metadata:
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 1Gi
        globalMounts:
          - path: *path_metadata
      media:
        type: nfs
        server: 192.168.178.14
        path: /mnt/chronos/media-data
        globalMounts:
          - path: /audiobooks
      tmp:
        type: emptyDir

    rawResources:

      dest-config:
        apiVersion: volsync.backube/v1alpha1
        kind: ReplicationDestination
        spec:
          spec:
            trigger:
              manual: restore-once
            restic:
              repository: audiobookshelf-restic-config
              accessModes: [ReadWriteOnce]
              capacity: *pvc_config_size
              copyMethod: Snapshot
              moverSecurityContext:
                runAsUser: *PUID
                fsGroup: *GUID
                runAsGroup: *GUID

      source-config:
        apiVersion: volsync.backube/v1alpha1
        kind: ReplicationSource
        spec:
          spec:
            sourcePVC: audiobookshelf-config
            trigger:
              schedule: '@daily'
            restic:
              repository: audiobookshelf-restic-config
              pruneIntervalDays: 7
              retain:
                daily: 7
                weekly: 4
              accessModes: [ReadWriteOnce]
              copyMethod: Snapshot
              moverSecurityContext:
                runAsUser: *PUID
                fsGroup: *GUID
                runAsGroup: *GUID
