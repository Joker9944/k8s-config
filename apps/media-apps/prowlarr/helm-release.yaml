---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prowlarr
  namespace: ${main_namespace}
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  valuesFrom:
    - kind: Secret
      name: prowlarr-secret-values

  values:

    global:
      labels:
        app.kubernetes.io/part-of: servarr

    defaultPodOptions:
      labels:
        app.kubernetes.io/part-of: servarr
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/part-of: servarr

    controllers:

      prowlarr:

        pod:
          securityContext:
            runAsUser: &PUID 568
            runAsGroup: &GUID 568
            runAsNonRoot: true
            fsGroup: *GUID
            seccompProfile:
              type: RuntimeDefault

        containers:

          prowlarr:
            image:
              repository: ghcr.io/onedr0p/prowlarr
              tag: 1.27.0.4852@sha256:d0f250eb05f5933c04987d62611894f5eb29b374c73fa08843d415060f9a2bd3
            env:
              # https://techcommunity.microsoft.com/t5/microsoft-developer-community/hardening-an-asp-net-container-running-on-kubernetes/ba-p/2542224
              COMPlus_EnableDiagnostics: 0
              PROWLARR__APP__INSTANCENAME: Prowlarr
              PROWLARR__AUTH__APIKEY:
                valueFrom:
                  secretKeyRef:
                    name: prowlarr-api-key
                    key: key
              PROWLARR__AUTH__METHOD: External
              PROWLARR__AUTH__REQUIRED: Enabled
              PROWLARR__SERVER__PORT: &port_http 9696
              PROWLARR__LOG__LEVEL: info
              PROWLARR__POSTGRES__HOST:
                valueFrom:
                  secretKeyRef:
                    name: cnpg-user-prowlarr-user
                    key: HOST
              PROWLARR__POSTGRES__USER:
                valueFrom:
                  secretKeyRef:
                    name: cnpg-user-prowlarr-user
                    key: ROLE
              PROWLARR__POSTGRES__PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: cnpg-user-prowlarr-user
                    key: PASSWORD
              PROWLARR__POSTGRES__MAINDB: prowlarr-main
              PROWLARR__POSTGRES__LOGDB: prowlarr-log
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    port: *port_http
                    path: /ping
                  failureThreshold: 6
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    port: *port_http
                    path: /ping
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    port: *port_http
                    path: /ping
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 30m
                memory: 400Mi
              limits:
                memory: 700Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

          oauth2-proxy:
            image:
              repository: quay.io/oauth2-proxy/oauth2-proxy
              tag: v7.7.1@sha256:f6a4aa83a27e316114bf79664302b1ffb2cc8ce697fb479273af4feb3fb16fe3
            env:
              OAUTH2_PROXY_PROVIDER: oidc
              OAUTH2_PROXY_PROVIDER_DISPLAY_NAME: Kanidm
              OAUTH2_PROXY_CLIENT_ID: prowlarr
              OAUTH2_PROXY_OIDC_ISSUER_URL: https://idm.vonarx.online/oauth2/openid/prowlarr
              OAUTH2_PROXY_CODE_CHALLENGE_METHOD: S256
              OAUTH2_PROXY_REDIRECT_URL: https://prowlarr.vonarx.online/oauth2/callback
              OAUTH2_PROXY_REVERSE_PROXY: true
              OAUTH2_PROXY_HTTP_ADDRESS: :4180
              OAUTH2_PROXY_EMAIL_DOMAINS: '*'
            envFrom:
              - secretRef:
                  name: prowlarr-oauth2
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

        initContainers:

          postgresql:
            image:
              repository: ghcr.io/joker9944/postgresql-client
              tag: 3.21.0@sha256:4f37d3a352cde995f10ffd6ecf5a2266e1b97a14fb72eddb236724c9c49545b3
            env:
              PGHOST:
                valueFrom:
                  secretKeyRef:
                    name: servarr-cnpg-superuser
                    key: host
              PGUSER:
                valueFrom:
                  secretKeyRef:
                    name: servarr-cnpg-superuser
                    key: user
              PGPASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: servarr-cnpg-superuser
                    key: password
              MAIN_DATABASE: prowlarr-main
              LOG_DATABASE: prowlarr-log
              DATABASE_ROLE: prowlarr-main-group
            command: [/bin/sh, -c]
            args:
              - |
                echo "Testing connection for DB $MAIN_DATABASE and $LOG_DATABASE on $HOST"
                until
                  pg_isready --dbname="$MAIN_DATABASE"
                  pg_isready --dbname="$LOG_DATABASE"
                  do sleep 5
                done
                echo "DB $MAIN_DATABASE and $LOG_DATABASE available on $HOST"
                echo "Changing owner of the $LOG_DATABASE database on $HOST"
                psql --command="ALTER DATABASE \"$LOG_DATABASE\" OWNER TO \"$DATABASE_ROLE\";"
                psql --command="GRANT ALL ON DATABASE \"$LOG_DATABASE\" TO \"$DATABASE_ROLE\";"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

    service:

      prowlarr:
        controller: prowlarr
        ports:
          http:
            port: *port_http
      oauth2-proxy:
        controller: prowlarr
        ports:
          auth:
            port: 4180

    ingress:

      prowlarr:
        annotations:
          traefik.ingress.kubernetes.io/router.tls: "true"
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: ingress-system-chain-basic@kubernetescrd,ingress-system-local-link-whitelist@kubernetescrd,${main_namespace}-prowlarr-oauth2-redirect@kubernetescrd,${main_namespace}-prowlarr-oauth2-forward@kubernetescrd
        hosts:
          - host: &host prowlarr.vonarx.online
            paths:
              - path: /
                service:
                  identifier: prowlarr
                  port: http
        tls:
          - hosts:
              - *host
            secretName: wildcard-vonarx-online

      oauth2-proxy:
        annotations:
          traefik.ingress.kubernetes.io/router.tls: "true"
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: ingress-system-chain-basic@kubernetescrd,ingress-system-local-link-whitelist@kubernetescrd
        hosts:
          - host: *host
            paths:
              - path: /oauth2/
                service:
                  identifier: oauth2-proxy
                  port: auth
        tls:
          - hosts:
              - *host
            secretName: wildcard-vonarx-online

    persistence:

      config:
        type: emptyDir

      tmp:
        type: emptyDir

    rawResources:

      main:
        apiVersion: db.movetokube.com/v1alpha1
        kind: Postgres
        spec:
          spec:
            database: prowlarr-main
            dropOnDelete: false

      log:
        apiVersion: db.movetokube.com/v1alpha1
        kind: Postgres
        spec:
          spec:
            database: prowlarr-log
            dropOnDelete: false

      user:
        apiVersion: db.movetokube.com/v1alpha1
        kind: PostgresUser
        spec:
          spec:
            role: prowlarr
            database: prowlarr-main
            secretName: cnpg-user
            privileges: OWNER

      oauth2-forward:
        apiVersion: traefik.io/v1alpha1
        kind: Middleware
        spec:
          spec:
            forwardAuth:
              address: https://prowlarr.vonarx.online/oauth2/auth
              trustForwardHeader: true
              authResponseHeaders:
                - X-Auth-Request-Access-Token
                - Authorization

      oauth2-redirect:
        apiVersion: traefik.io/v1alpha1
        kind: Middleware
        spec:
          spec:
            errors:
              status:
                - "401"
                - "402"
                - "403"
              service:
                name: prowlarr-oauth2-proxy
                port: 4180
              query: "/oauth2/sign_in?={url}"
