---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: blocky
  namespace: ${main_namespace}
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.3.2
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:

    controllers:
      blocky:

        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch

        containers:

          blocky:
            image:
              repository: ghcr.io/0xerr0r/blocky
              tag: v0.24@sha256:9a82e0235c52ef3048586f8006add06e52132adaae70d02f980569dae16421a2
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 30m
                memory: 100Mi
              limits:
                memory: 500Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

        initContainers:

          jinja:
            image:
              repository: ghcr.io/joker9944/jinja-cli
              tag: 3.12.5@sha256:53082c3ccbf84ae9238ba68cddb44a6490f8452ba9125999b60fc8d006c5b4b6
            env:
              PGURI:
                valueFrom:
                  secretKeyRef:
                    name: blocky-cnpg-app
                    key: uri
              REDIS_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: blocky-redis
                    key: redis-password
            args: [/templates/config.yml, '>', /config/config.yml]
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

          postgresql:
            image:
              repository: ghcr.io/joker9944/postgresql-client
              tag: 3.20.2@sha256:49a4e6bedc87186bf6501de5ca7eb74fc137a83bed65adda89cdd7486910c127
            env:
              PGHOST:
                valueFrom:
                  secretKeyRef:
                    name: blocky-cnpg-app
                    key: host
              PGUSER:
                valueFrom:
                  secretKeyRef:
                    name: blocky-cnpg-app
                    key: user
              PGPASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: blocky-cnpg-app
                    key: password
              PGDATABASE:
                valueFrom:
                  secretKeyRef:
                    name: blocky-cnpg-app
                    key: dbname
            command: [/bin/sh, -c]
            args:
              - |
                echo "Testing connection for DB $PGDATABASE on $PGHOST"
                until
                  pg_isready
                  do sleep 5
                done
                echo "DB $PGDATABASE avilable on $PGHOST"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

    service:
      blocky:
        controller: blocky
        type: LoadBalancer
        annotations:
          metallb.universe.tf/loadBalancerIPs: 192.168.178.211
        ports:
          dns-tcp:
            port: 53
          dns-udp:
            port: 53
            protocol: UDP
          dot:
            port: 853
      metrics:
        controller: blocky
        ports:
          http:
            port: 4000

    ingress:
      blocky:
        annotations:
          traefik.ingress.kubernetes.io/router.tls: "true"
          traefik.ingress.kubernetes.io/router.entrypoints: dot
          traefik.ingress.kubernetes.io/router.middlewares: ingress-system-country-whitelist@kubernetescrd
        hosts:
          - host: &host dot.vonarx.online
            paths:
              - path: /
                service:
                  identifier: blocky
                  port: dot
        tls:
          - hosts:
              - *host
            secretName: wildcard-vonarx-online

    persistence:
      config:
        type: emptyDir
      templates:
        type: configMap
        name: blocky-config-templates
        advancedMounts:
          blocky:
            jinja:
              - path: /templates

    rawResources:
      cnpg:
        apiVersion: postgresql.cnpg.io/v1
        kind: Cluster
        spec:
          spec:
            description: PostgreSQL Cluster for blocky
            instances: 3
            storage:
              size: 1Gi
            walStorage:
              size: 1Gi
            bootstrap:
              initdb:
                database: query-log
                owner: blocky
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: blocky-redis
  namespace: ${main_namespace}
spec:
  interval: 30m
  chart:
    spec:
      chart: redis
      version: 20.0.3
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bitnamicharts
        namespace: flux-system
  values:
    architecture: standalone
    master:
      persistence:
        enabled: false
